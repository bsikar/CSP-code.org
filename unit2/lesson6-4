What problem does the DNS solve?
The problem that DNS solves is that with out DNS you would have to access websites via using their public IP address and not their URL.
Code.org gave a very good description of what DNS solves and they went into detail about what DNS is:
"At its core, the DNS is 'simply' a hierarchical system of computers and databases, that maps IP addresses to domain names. It enables Internet users to connect human-language locations on the Internet with numeric addresses used by IP. While distributed and hierarchical, it can be treated in the abstract as a centralized registry of locations on the Internet, allowing users to quickly find locations they are looking for and register themselves so that others may find them."

How does the DNS help the world wide web scale so that billions of users can access billions of web pages?
Since DNS, The Domain Name System, is a system after all it is scalable. Every new domain that is registered and set up properly is able to be accessed by said domain with the help of DNS. For example, lets say that I buy a domain from www.domain.com and I connect that domain to my Apache Server which before could only have been accessed by typing the public IP address of the server into my URL search bar. Now anyone on the internet is able to my website by typing my domain in the URL search bar. DNS helps the world wide web scale so that billions of users can access billions of web pages. DNS allows this because from the video we watched in class; DNS servers talk to other DNS servers. This means that only 1 DNS server has to have your domain and IP address. That is the big take away, DNS servers communicate with/to other DNS servers allowing for billions of users being able to access billions of web pages.

Why do you think I was switching your classmates’ IP addresses?
You never did, but I think I understand why you might have if we did the code.org activity. Every device that is connected on the internet gets assigned to a public IP and gets assigned a private IP. You could have been either changing our public or our private IP. If the private IP address was changed then a new device was registered (which wouldn't make sense for this case) or the address was changed just for fun (no real useful reason) or the more likely reason: we accessed the internet from a different device. If the (more likely) public IP was changed then you were simulating that when you connect to a new network your public IP changes, and also most likely your private IP too.

If IP addresses can change, is there a better way for everyone to know everyone else’s IP address?
Not really, it all depends if we are talking about private IP addresses or public IP addresses. Public IP addresses can change, only if they are dynamic (they can get changed automatically, but only for security reasons) or manually if the IP addresses is static. Public IP addresses are really only changed because of security reasons. If the router has been getting attacked or is currently getting attacked then the best form of fixing the problem is by changing the public IP address. If the router has a dynamically fixed IP address and is being attacked because of someone DOSing the router or a group DDOSing the router then the IP could (depending on your ISP and router settings) get assigned a new IP address. This said if the router is statically fixed then you would have to manually change the IP address. In the end though to answer the question, there is no reason for IP addresses to have a better way for everyone to know everyone else's IP address since the current system is very good and the IP address wouldn't really ever change especially since most, basically every, server uses static IP addresses.

How does the DNS solve the problem of translating domain names like example.com into IP addresses?
DNS helps solve this problem by having servers (DNS servers) with a phone book like system that records domains and their associated IP addresses. DNS severs are tasked with using their phone book like system to redirect your computer to the attended website (IP address) through using a POST command when ever you try to access the website (because when you try to access the website a GET command is sent to the DNS server). DNS servers are set up in a hierarchy where if one DNS server does not know the domain it asks another until it either finds the proper site or fails to.

How does the DNS help the Internet scale?
DNS helps the Internet scale by allowing for billions of users to access billions of domains. From the video we watched in class; DNS servers talk to other DNS servers. This means that only 1 DNS server has to have your domain and IP address. That is the big take away, DNS servers communicate with/to other DNS servers allowing for billions of users being able to access billions of web pages. This allows the Internet to scale.

What problem is HTTP solving?
The Hypertext Transfer Protocol solves the problem of actually seeing the website once a DNS server redirects you to the IP address. Once you are sent to the server hosting the website you wont see anything by default. HTTP, Hypertext Transfer Protocol, sends you the websites index.html and their other files (.js, .html, etc). HTTP lets you see the website.

What is a GET request and what are your requesting?
A GET request is a request sent to a DNS server to "request" for a website's public IP address to direct you to. A GET request is followed by a POST request. POST methods are frequently used to create resources while GET methods are frequently used to request a representation of a resource.

How does HTTP rely on the other layers of the Internet?
The "Layers of the Internet activity guide" states that HTTP relies on GET requests, POST requests, and TCP/IP packets.
The "Layers of the Internet activity guide" states: "Computers communicate in plain text like GET to request files or send data. The server that receives the request responds with the files requested which are displayed by your browser. HTTP requests are sent between computers over the internet as part of TCP/IP packets. The world wide web is just files that are requested using HTTP and sent over the Internet."

Why are SSL, TLS, and HTTPS necessary?
With out SSL and TLS, you wouldn't have HTTPS, and HTTPS is necessary because without it data sent and received could be hacked and changed. HTTPS is in place so that your data is not compromised. Without HTTPS hackers can steal your information.

What do certificate authorities do and why are they necessary?
A digital certificate (for example, an SSL/TLS certificate) that proves the website’s identity. A certificate authority that verifies the website and issues the digital certificate.A digital signature that proves the SSL certificate was issued by the trusted certificate authority. Certificate authorities are necessary to verify that a website is real and not a fake. Without certificate authorities there would be no HTTPS and without HTTPS hackers could steal your information. So without certificate authorities you are prone to getting hacked.

How does HTTP work?
As a request-response protocol, HTTP gives users a way to interact with web resources such as HTML files by transmitting hypertext messages between clients and servers. HTTP clients generally use Transmission Control Protocol (TCP) connections to communicate with servers. HTTP utilizes specific request methods in order to perform various tasks: GET requests a specific resource in its entirety, HEAD requests a specific resource without the body content, POST adds content, messages, or data to a new page under an existing web resource, PUT directly modifies an existing web resource or creates a new URI if need be, DELETE gets rid of a specified resource, TRACE shows users any changes or additions made to a web resource, OPTIONS shows users which HTTP methods are available for a specific URL, CONNECT converts the request connection to a transparent TCP/IP tunnel, and PATCH partially modifies a web resource. All HTTP servers use the GET and HEAD methods, but not all support the rest of these request methods. The Activity Guide that we were provided with says "allow computers to request and share webpages, audio, images, videos, and other file types on the Internet, collectively known as the world wide web. Computers communicate in plain text like GET to request files or send data. The server that receives the request responds with the files requested which are displayed by your browser. HTTP requests are sent between computers over the internet as part of TCP/IP packets. The world wide web is just files that are requested using HTTP and sent over the Internet.

Using your Layers of the Internet activity guide to help you, explain how each of the different layers is involved when you go to a link like code.org?
You connect to a physical network first then your router's IP address sends a REQUEST to a DNS server to get the server's IP address. The next step is HTTP which uses TCP and UDP in order to get you a website's files.
